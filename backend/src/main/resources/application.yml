spring:
  application:
    name: smpp-subscription-management
  
  datasource:
    url: jdbc:postgresql://localhost:5432/smpp_subscriptions
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          batch_size: 25
        order_inserts: true
        order_updates: true
    show-sql: false
    open-in-view: false
  
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    validate-migration-naming: true
  
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:redis_password}
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:redis_password}
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
  
  cache:
    type: redis
    redis:
      time-to-live: 3600000
      cache-null-values: false
      use-key-prefix: true
      key-prefix: "smpp:cache:"
  
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI:http://localhost:8080}
          jwk-set-uri: ${JWT_JWK_SET_URI:http://localhost:8080/oauth2/jwks}

server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: on_param
    include-exception: false

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,env,threaddump,heapdump
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}
      environment: ${ENVIRONMENT:development}

logging:
  level:
    root: INFO
    com.smpp: DEBUG
    org.springframework.web: INFO
    org.springframework.security: INFO
    org.hibernate.SQL: ${HIBERNATE_LOG_LEVEL:INFO}
    org.hibernate.type.descriptor.sql.BasicBinder: ${HIBERNATE_LOG_LEVEL:INFO}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/smpp-subscription-management.log
    max-size: 100MB
    max-history: 30

springdoc:
  api-docs:
    enabled: true
    path: /api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    try-it-out-enabled: true
    operations-sorter: method
    tags-sorter: alpha
    doc-expansion: none
  show-actuator: true

app:
  security:
    jwt:
      secret: ${JWT_SECRET:your-256-bit-secret-key-for-jwt-token-generation}
      expiration: ${JWT_EXPIRATION:86400000}
      refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000}
    encryption:
      algorithm: AES
      key: ${ENCRYPTION_KEY:your-256-bit-encryption-key}
      salt: ${ENCRYPTION_SALT:your-salt-value}
  
  sync:
    cache-invalidation:
      enabled: true
      ttl: 30000
      batch-size: 100
    external:
      enabled: true
      polling-interval: 30000
      batch-size: 100
      max-retries: 3
      retry-delay: 1000
      max-processing-time-minutes: 10
      health-check-threshold-minutes: 5
      cleanup-retention-days: 30
    webhook:
      enabled: true
      timeout: 5000
      max-retries: 3
      retry-delay: 1000
      secret: ${WEBHOOK_SECRET:your-webhook-signing-secret}
      endpoints:
        - ${WEBHOOK_ENDPOINT_1:}
        - ${WEBHOOK_ENDPOINT_2:}
        - ${WEBHOOK_ENDPOINT_3:}
    amarisoft:
      enabled: true
      host: ${AMARISOFT_HOST:localhost}
      port: ${AMARISOFT_PORT:8080}
      username: ${AMARISOFT_USERNAME:admin}
      password: ${AMARISOFT_PASSWORD:admin}
      timeout: 5000
      max-retries: 3
  
  performance:
    subscription-lookup:
      target-latency-ms: 50
      cache-hit-ratio-target: 0.95
    api:
      rate-limit:
        enabled: true
        requests-per-minute: 1000
        burst-capacity: 100

cors:
  allowed-origins:
    - http://localhost:3000
    - http://localhost:3001
  allowed-methods:
    - GET
    - POST
    - PUT
    - DELETE
    - PATCH
    - OPTIONS
  allowed-headers:
    - "*"
  exposed-headers:
    - Authorization
    - X-Total-Count
    - X-Page-Number
    - X-Page-Size
  allow-credentials: true
  max-age: 3600